on:
  push:
    branches:
      - "main"
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build-easyeaas:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16.x'
        cache: 'npm'
        cache-dependency-path: EasyEaaS/package-lock.json
    - name: npm install, build, and test
      working-directory: EasyEaaS
      run: |
        npm install
        npm run test
        npm run dist
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: web
        path: EasyEaaS/dist

  build-docker:
    runs-on: ubuntu-latest
    needs: build-easyeaas
    environment:
      name: 'prod'
    steps:
    - uses: actions/checkout@v3
    - name: Download web artifact
      uses: actions/download-artifact@v3
      with:
        name: web
        path: docker/web/dist
    - name: Token replace
      uses: cschleiden/replace-tokens@v1
      with:
        tokenPrefix: '#{'
        tokenSuffix: '}#'
        files: '["**/*"]'
      env:
        VPN_SERVER_PRIVATE_KEY: ${{ secrets.VPN_SERVER_PRIVATE_KEY }}
        CADDY_USER1_HASH_PASSWORD: ${{ secrets.CADDY_USER1_HASH_PASSWORD }}
        TRELLO_KEY: ${{ secrets.TRELLO_KEY }}
        TRELLO_TOKEN: ${{ secrets.TRELLO_TOKEN }}
        TRELLO_OAUTH_SECRET: ${{ secrets.TRELLO_OAUTH_SECRET }}
    - name: Build Docker Images
      working-directory: docker
      run: |
        export IMAGE_TAG=$(git rev-parse --short HEAD)
        docker compose build
    - name: Login to Docker Registry
      run: |
        docker login --username user1 --password ${{ secrets.DOCKER_REGISTRY_PASSWORD }} stevenzps2.duckdns.org
    - name: Push Docker Images to Registry
      run: |
        export IMAGE_TAG=$(git rev-parse --short HEAD)
        docker push stevenzps2.duckdns.org/caddy:${IMAGE_TAG}
        docker push stevenzps2.duckdns.org/tinc:${IMAGE_TAG}
        docker push stevenzps2.duckdns.org/web:${IMAGE_TAG}

  deploy:
    runs-on: ubuntu-latest
    needs: build-docker
    environment:
      name: 'prod'
    steps:
    - uses: actions/checkout@v3
    - name: Install SSH Key
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.AZURE_INSTANCE3_PRIVATE_KEY }}
        known_hosts: ${{ secrets.AZURE_INSTANCE3_KEYSCAN }}
    - name: Run Docker Images
      working-directory: docker
      run: |
        docker -H ssh://azureuser@stevenzps2.duckdns.org compose up -d

